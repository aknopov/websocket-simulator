plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id('net.ltgt.errorprone') version '4.1.0'
    id('net.ltgt.nullaway') version '2.2.0'
}

group = 'com.aknopov'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

dependencies {
    errorprone("com.google.errorprone:error_prone_core:$errorproneVersion")
    errorprone("com.uber.nullaway:nullaway:$nullawayVersion")

    implementation "jakarta.websocket:jakarta.websocket-api:$jakartaVersion"
    implementation "org.glassfish.tyrus:tyrus-server:$jakartaVersion"
    runtimeOnly "org.glassfish.tyrus:tyrus-container-grizzly-server:$jakartaVersion"

    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    testRuntimeOnly "ch.qos.logback:logback-classic:$logbackVersion"

    compileOnly "com.google.code.findbugs:jsr305:$jsr305Version"
    compileOnly "com.google.errorprone:error_prone_annotations:$errorproneVersion"

    testImplementation platform('org.junit:junit-bom:5.12.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    finalizedBy jacocoTestReport
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        csv.required = true
        xml.required = false
        html.required = false
    }
}

project.checkstyle.configDirectory.set(file('./checkstyle'))

import net.ltgt.gradle.errorprone.CheckSeverity

tasks {
    compileJava {
        options.errorprone {
            enabled = true
            disableWarningsInGeneratedCode = true
            // checks to the extreme
            allDisabledChecksAsWarnings = true
            // Disable particular errors globally
            disable("Var", "Varifier", "Java7ApiChecker", "Java8ApiChecker", "AndroidJdkLibsChecker", "BooleanParameter",
                    "ImmutableMemberCollection")
            // List packages to check in comma-separated list
            nullaway {
                severity = CheckSeverity.ERROR
            }
        }
    }
    compileTestJava {
        options.errorprone.enabled = false
    }
}

nullaway {
    annotatedPackages.add("com.aknopov.wssimulator")
}
